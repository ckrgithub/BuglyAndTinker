apply plugin: 'com.android.application'
apply from: 'tinker_support.gradle'

android {
    signingConfigs {
        release {
            keyAlias 'ckr'
            keyPassword '123456'
            storeFile file('ckr.jks')
            storePassword '123456'
        }
    }
    compileSdkVersion androidConfig.compileSdkVersion
    defaultConfig {
        applicationId appConfig.applicatonId
        minSdkVersion androidConfig.minSdkVersion
        targetSdkVersion androidConfig.targetSdkVersion
        versionCode appConfig.versionCode
        versionName appConfig.versionName

        ndk {
            abiFilters "armeabi", "armeabi-v7a", "arm64-v8a", "mips", "mips64", "x86", "x86_64"
        }
    }
    buildTypes {
        release {
            signingConfig signingConfigs.release
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField "boolean", "IS_DEBUG", "false"
        }

        debug {
            signingConfig signingConfigs.release
            buildConfigField "boolean", "IS_DEBUG", "true"
        }
    }
    android.applicationVariants.all { variant ->
        variant.outputs.all {
            outputFileName = 'Upgrade' + '-' + buildType.name + '-v' + defaultConfig.versionName + '.' + defaultConfig.versionCode + '.apk'
        }
    }

}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation applyConfig.appcompat_v7
    implementation applyConfig.support_v4
    implementation applyConfig.constraint_layout
    implementation applyConfig.tinker_lib
    annotationProcessor(applyConfig.tinker_anno_processor) { changing = true }
    compileOnly(applyConfig.tinker_anno) { changing = true }
    implementation applyConfig.bugly_crashreport
    implementation applyConfig.bugly_nativecrashreport
    implementation applyConfig.okhttp
    implementation project(':upgrade')
//    implementation 'ckrjfrog.Upgrade:AppUpgrade:1.0.1'
}
